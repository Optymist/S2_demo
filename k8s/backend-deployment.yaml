apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: microservices-demo
  labels:
    app: backend
    tags.datadoghq.com/env: "production"
    tags.datadoghq.com/service: "backend-service"
    tags.datadoghq.com/version: "1.0.0"
spec:
  replicas: 2
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
        tags.datadoghq.com/env: "production"
        tags.datadoghq.com/service: "backend-service"
        tags.datadoghq.com/version: "1.0.0"
      annotations:
        ad.datadoghq.com/backend.logs: '[{"source":"nodejs","service":"backend-service"}]'
        ad.datadoghq.com/backend.tags: '{"env":"production","team":"backend"}'
    spec:
      containers:
        - name: backend
          image: backend-service:latest
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
            capabilities:
              drop:
                - ALL
          ports:
            - containerPort: 3001
              name: http
          env:
            - name: PORT
              value: "3001"
            - name: NODE_ENV
              value: "production"
            # Datadog Agent Configuration
            - name: DD_AGENT_HOST
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: DD_ENV
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['tags.datadoghq.com/env']
            - name: DD_SERVICE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['tags.datadoghq.com/service']
            - name: DD_VERSION
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['tags.datadoghq.com/version']
            # APM Configuration
            - name: DD_TRACE_AGENT_PORT
              value: "8126"
            - name: DD_TRACE_ENABLED
              value: "true"
            - name: DD_TRACE_SAMPLE_RATE
              value: "1"
            - name: DD_TRACE_REMOVE_INTEGRATION_SERVICE_NAMES_ENABLED
              value: "true"
            # Logs Configuration
            - name: DD_LOGS_INJECTION
              value: "true"
            # Runtime Metrics
            - name: DD_RUNTIME_METRICS_ENABLED
              value: "true"
            # Continuous Profiler
            - name: DD_PROFILING_ENABLED
              value: "true"
            # Data Streams Monitoring
            - name: DD_DATA_STREAMS_ENABLED
              value: "true"
            # App Security (RASP)
            - name: DD_APPSEC_ENABLED
              value: "true"
            # IAST (Runtime Code Analysis)
            - name: DD_IAST_ENABLED
              value: "true"
            # SCA (Software Composition Analysis)
            - name: DD_APPSEC_SCA_ENABLED
              value: "true"
            # Git Repository
            - name: DD_GIT_REPOSITORY_URL
              value: "github.com/wandilem7/s2_demo"
          livenessProbe:
            httpGet:
              path: /health
              port: 3001
            initialDelaySeconds: 10
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: 3001
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
            requests:
              memory: "256Mi"
              cpu: "200m"
            limits:
              memory: "512Mi"
              cpu: "500m"
---
apiVersion: v1
kind: Service
metadata:
  name: backend-service
  namespace: microservices-demo
spec:
  selector:
    app: backend
  ports:
    - name: http
      port: 80
      targetPort: 3001
  type: ClusterIP