name: Deploy

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        type: choice
        options:
          - dev
          - staging
          - production
        default: 'dev'

env:
  AZURE_CONTAINER_REGISTRY: ${{ secrets.AZURE_CONTAINER_REGISTRY }}
  IMAGE_NAME_BACKEND: backend-service
  IMAGE_NAME_FRONTEND: frontend-service

jobs:
  build-and-push-images:
    name: Build & Push Docker Images
    runs-on: ubuntu-latest
    permissions:
      contents: read
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.AZURE_CONTAINER_REGISTRY }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build and push Backend image
        run: |
          docker build -t ${{ env.AZURE_CONTAINER_REGISTRY }}/${{ env.IMAGE_NAME_BACKEND }}:${{ github.sha }} ./services/backend
          docker build -t ${{ env.AZURE_CONTAINER_REGISTRY }}/${{ env.IMAGE_NAME_BACKEND }}:latest ./services/backend
          docker push ${{ env.AZURE_CONTAINER_REGISTRY }}/${{ env.IMAGE_NAME_BACKEND }}:${{ github.sha }}
          docker push ${{ env.AZURE_CONTAINER_REGISTRY }}/${{ env.IMAGE_NAME_BACKEND }}:latest

      - name: Build and push Frontend image
        run: |
          docker build -t ${{ env.AZURE_CONTAINER_REGISTRY }}/${{ env.IMAGE_NAME_FRONTEND }}:${{ github.sha }} ./services/frontend
          docker build -t ${{ env.AZURE_CONTAINER_REGISTRY }}/${{ env.IMAGE_NAME_FRONTEND }}:latest ./services/frontend
          docker push ${{ env.AZURE_CONTAINER_REGISTRY }}/${{ env.IMAGE_NAME_FRONTEND }}:${{ github.sha }}
          docker push ${{ env.AZURE_CONTAINER_REGISTRY }}/${{ env.IMAGE_NAME_FRONTEND }}:latest


  deploy-application:
    name: Deploy Application
    runs-on: ubuntu-latest
    permissions:
      contents: read
    environment: ${{ github.event.inputs.environment || 'dev' }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Get AKS credentials
        run: |
          az aks get-credentials \
            --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
            --name ${{ secrets.AKS_CLUSTER_NAME }} \
            --overwrite-existing

      - name: Update image tags in manifests
        run: |
          sed -i 's|image:.*backend-service.*|image: ${{ env.AZURE_CONTAINER_REGISTRY }}/${{ env.IMAGE_NAME_BACKEND }}:${{ github.sha }}|g' k8s/backend-deployment.yaml
          sed -i 's|image:.*frontend-service.*|image: ${{ env.AZURE_CONTAINER_REGISTRY }}/${{ env.IMAGE_NAME_FRONTEND }}:${{ github.sha }}|g' k8s/frontend-deployment.yaml

      - name: Deploy to AKS
        run: |
          kubectl apply -f k8s/namespace.yaml
          kubectl apply -f k8s/configmap.yaml
          kubectl apply -f k8s/backend-deployment.yaml
          kubectl apply -f k8s/frontend-deployment.yaml

      - name: Wait for deployment
        run: |
          kubectl rollout status deployment/backend -n microservices-demo --timeout=5m
          kubectl rollout status deployment/frontend -n microservices-demo --timeout=5m

      - name: Get service endpoints
        run: |
          echo "Backend service:"
          kubectl get svc backend -n microservices-demo
          echo "Frontend service:"
          kubectl get svc frontend -n microservices-demo
